<?xml version="1.0" encoding="UTF-8"?>
<refentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:scilab="http://www.scilab.org" xmlns:svg="http://www.w3.org/2000/svg" xmlns:ns3="http://www.w3.org/1999/xhtml" xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:db="http://docbook.org/ns/docbook" version="5.0-subset Scilab" xml:id="cv_gaussianfilter" xml:lang="en">
<refnamediv>
<refname>cv_gaussianfilter</refname>
 <refpurpose>To provide Gaussian Filter</refpurpose>
 </refnamediv>

<refsynopsisdiv>
 <title>Calling Sequence</title> 
<synopsis>img_ret=cv_gaussianfilter(image,kernel_type,kernel_size,sigmaX,sigmaY)
</synopsis>
 </refsynopsisdiv>
<refsection> 
<title>Arguments</title>
<variablelist>
<varlistentry>
<term>image</term>
<listitem>
<para>It is the input Image can be rgb or grayscale</para>
</listitem>
</varlistentry>
<varlistentry>
<term>kernel_type</term>
<listitem>
<para>It accepts Integer/Float as Input  1->MORPH_RECT 2-> MORPH_ELLIPSE 3-> MORPH_CROSS</para>
</listitem>
</varlistentry>
<varlistentry>
<term>kernel_size</term>
<listitem>
<para>It accepts a list as input specifying the size of Kernel needed example (5,5)</para>
</listitem>
</varlistentry>
<varlistentry>
<term>sigmaX</term>
<listitem>
<para>Gaussian kernel standard deviation in X direction.must be an integer</para>
</listitem>
</varlistentry>
<varlistentry>
<term>sigmaY</term>
<listitem>
<para>Gaussian kernel standard deviation in Y direction; if sigmaY is zero, it is set to be equal to sigmaX, if both sigmas are zeros, they are computed from kernel_size.width and kernel_size.height , respectively (see getGaussianKernel() for details); to fully control the result regardless of possible future modifications of all this semantics, it is recommended to specify all of kernel_size, sigmaX, and sigmaY</para>
</listitem>
</varlistentry>
<varlistentry>
<term>img_ret</term>
<listitem>
<para>returned Image after gaussian filter</para>
</listitem>
</varlistentry>
</variablelist>
</refsection>
<refsection> 
<title>Description</title>
<para>Gaussian Filter</para>
<para>In this function, instead of a box filter consisting of equal filter coefficients, a Gaussian kernel is used. It is done with the function,</para></refsection>
<refsection>
<title>Examples</title>
<programlisting role="example">
img_ret=cv_gaussianfilter(input_image,1,[5,5],0,0);</programlisting>
</refsection>
<refsection role="see also">
<title>See Also</title>
<simplelist type="inline">
<member>
<link linkend="cv_bilateralfilter">cv_bilateralfilter</link>
<link linkend="cv_blackhat">cv_blackhat</link>
</member>
</simplelist>
</refsection>
</refentry>